// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_types = require("bs-platform/lib/js/js_types.js");
var MimeTypes = require("mime-types");

function classify(value) {
  if (Js_types.test(value, /* String */4)) {
    return /* String */Block.__(0, [value]);
  } else {
    return /* Boolean */Block.__(1, [value]);
  }
}

function _wrapUnionReturn(func, value) {
  var value$1 = classify(Curry._1(func, value));
  if (value$1.tag) {
    return ;
  } else {
    return value$1[0];
  }
}

function contentType(param) {
  return _wrapUnionReturn((function (prim) {
                return MimeTypes.contentType(prim);
              }), param);
}

function lookup(param) {
  return _wrapUnionReturn((function (prim) {
                return MimeTypes.lookup(prim);
              }), param);
}

function extension(param) {
  return _wrapUnionReturn((function (prim) {
                return MimeTypes.extension(prim);
              }), param);
}

function charset(param) {
  return _wrapUnionReturn((function (prim) {
                return MimeTypes.charset(prim);
              }), param);
}

var types = MimeTypes.types;

var extensions = MimeTypes.extensions;

exports.types = types;
exports.extensions = extensions;
exports.contentType = contentType;
exports.lookup = lookup;
exports.extension = extension;
exports.charset = charset;
/* types Not a pure module */
